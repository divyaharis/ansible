Configuration Management
============================
This is the process of configuring servers from one point
of control

Advantages
==================
1 Provisioning of Servers
  Setup of s/w's on servers can be done very easily from one point

2 Reduction of usage of resources
  We require less amount of time,money and human resources to configure
  servers

3 Handling Snowflake servers
  After a point of time all servers in the data center behave like
  snowflake servers ie they might be running on slightly different
  h/w and s/w confurations.Configuaration Management tools can pick
  up this info in simple setup file which can be reused to setup
  similar environments

4 Disaster Recovery
  In case of disaster recovery where we can loose an entire data center
  we can recreate similar data center with greater ease

5 Idempotent
  Configuration Management tools are used to bring the servers to a
  specific state called as "desired state",If the rmeote server is 
  already in the desired state CM tools will not reconfigure that server

===========================================================================
Popular CM tools
======================
Ansible
Chef
Puppet
Saltstack
=========================================================================
Ansible is installed on one machine that is called as "Controller"
all the remaining servers that we want to configure are called
as "managed nodes/hosts"
Ansible uses "agentless" policy to configure the remote servers
ie we don't require any client side s/w of ansible to be present
on the managed nodes
Ansible uses "push" methodology to push the configuration changes
via passwordless ssh
----------------------------------------------------------------------
=========================================================================
Setup of Ansible
=============================
1 Create 3-4 AWS ubuntu instances
2 Name the first one Controller and the remaining as MAnaged nodes
3 Establish passwordless ssh between Controller and managed nodes
  a) Connect to managed node
  b) Setup password of ubuntu user
     sudo passwd ubuntu
  c) Edit the sshd_config file
     sudo vim /etc/ssh/sshd_config
     Search for "PasswordAuthentication" and change it from no to yes
  d) Restart ssh
     sudo service ssh restart
  e) Connect to Controller
  f) Generate the ssh keys
     ssh-keygen
  g) Copy the public keys to authoried_keys on managed nodes
     ssh-copy-id ubuntu@private_ip_of_managednode

4 Install Ansible
  a) Update the apt repository
     sudo apt-get update
  b) Install softwares required for ansible
     sudo apt-get install software-properties-common
  c) Add the latest version of ansible to apt repository
     sudo apt-add-repository ppa:ansible/ansible
  d) Update the apt repository
     sudo apt-get update
  e) Install ansible
     sudo apt-get install -y ansible

Ansible uses a files known as "inventory" file to read info about 
the managed nodes,Here we should add the rmeote managed nodes
ipaddress

sudo vim /etc/ansible/hosts
Copy paste the private ip address of all managed nodes

================================================================
=========================================================================
Important modules in Ansible
=====================================
1 command: This is used to run basic linux commands on the managed
nodes.This is the default module of Ansible

2 shell: This is used to run shell scripts or python scripts
on the managed nodes.It is also used to run commands related
to redirection and piping

3 ping: This is used to check if the rmeote servers are pingable or not

4 user: This is used to perform user administration on managed nodes
ie creating users,assigning home dirs,deleting users etc

5 copy: Used to copy files and directories to the managed nodes

6 fetch: Used to copy files and directories from the managed nodes to
  controller

7 apt: Used to s/w package managemrn on DEbain,Ubuntu based machines

8 yum: similar to apt but it works on Redhat linux,centos etc

9 service: USed to start,stop or restart services on the managed nodes

10 git: Used to perform git version controlling on managed nodes

11 get_url: Used to downlaod files from remote service

12 uri: Used to check if the remote url is reachable or not

13 debug : Used to display some output in JSON file format

14 stat: Used to capture info about files and folders present on managed nodes

15 include: This is used to call child playbooks from a parent playbook

16 replace: This is used to replace specific text in a file

17 lineinfile: This is also similar to replace

18 docker_container: Used to manage docker containers on the managed nodes

19 docker_image: USed to manage docker images

20 docker_login: Used to login into docker registr

21 file: Used to create delete files/directories

22 k8s: Used to manage Kubernetes services

========================================================================
Ansible perfrom remote configuration in 3 ways
1 Adhoc commands
2 Playbooks
3 Roles